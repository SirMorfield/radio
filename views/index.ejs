<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>radio</title>
  <link rel="stylesheet" href="/style.css">
  <script src="/socket.io.min.js"></script>
</head>

<body>
  <div id="stationsBox">
    <% const stations = JSON.parse(stationsStr) %>
    <% for(const stationName in stations) { %>
    <% const station = stations[stationName] %>
    <div class="station" id="<%=stationName%>">
      <div class="stationText">
        <div class="stationName">
          <%= stationName %>
        </div>
        <b>Original: </b> <%= station.numOriginalSongs %> / <%= station.numAllSongs %> (<%= station.score %>%)
        <br>
        <b> Now playing:</b>
        <br>
        <div class="nowPlaying" style="display: inline"><%= station.lastSong.name %> - <%= station.lastSong.artist %></div>
        <% const secondsAgo = station.lastSong.dates[0] != 0 ? Math.floor((Date.now() - station.lastSong.dates[0]) / 1000) : 0 %>
        <div class="ago" style="float: right; display: inline"><%=secondsAgo%> seconds ago</div>
      </div>
      <textarea class="songs"><%= stationName %>: <%= JSON.stringify(station.songs, null, 2) %></textarea>
    </div>
    <%}%>
  </div>
  <script>
    const socket = io()
    socket.on('stationData', (data) => {
      document.querySelector(`#${data.station} > textarea`).innerHTML = JSON.stringify(data.parsed, null, 2)
    })

    socket.on('nowPlaying', ({ song, station }) => {
      document.querySelector(`#${station} > div > div.ago`).innerHTML = '1 seconds ago'
      document.querySelector(`#${station} > div > div.nowPlaying`).innerHTML = `${song.name} - ${song.artist}`
    })

    setInterval(() => {
      const blocks = document.getElementsByClassName('ago')
      for (let i = 0; i < blocks.length; i++) {
        let old = blocks[i].innerHTML
        old = old.match(/\d/g)
        old = old.join('')
        old = parseInt(old)
        if (old !== 0) {
          blocks[i].innerHTML = `${old + 1} seconds ago`
        }
      }
    }, 1000);


  </script>

</body>

</html>
